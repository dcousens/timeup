#!/bin/bash

function datediff () {
	a=$(date --date=@"$1" +%s)
	b=$(date --date=@"$2" +%s)
	echo $(( (b - a) ))
}

function showtime () {
	h=$(echo "${1}/3600" | bc)
	m=$(echo "(${1}%3600)/60" | bc)
	s=$(echo "${1}%60" | bc)

	line=''
	if [ "$h" -ne 0 ]; then
		line+=$(printf '%dh' "$h")
	fi
	if [ "$m" -ne 0 ]; then
		line+=$([[ -n $line ]] && echo ' ')
		line+=$(printf '%dm' "$m")
	fi
	if [ "$s" -ne 0 ]; then
		line+=$([[ -n $line ]] && echo ' ')
		line+=$(printf '%ds' "$s")
	fi
	echo "$line"
}

utc=$(date +'%s')
timedir="$TIMEUPDIR"
if [ -z "$timedir" ]; then
	timedir="$HOME/.timeup"
	if [ ! -d "$timedir" ]; then
		read -rp "Create $timedir? (y/N)? " ans
		if [[ $ans =~ ^[Yy]$ ]]
			exit
		then
			mkdir "$timedir"
			mkdir "$timedir/projects"
		fi
	fi
fi

histfile="$timedir/history.txt"
lockfile="$timedir/.lock"
projdir="$timedir/projects"

function endtask () {
	_task=$(<"$lockfile" cut -f1 -d ' ')
	_since=$(<"$lockfile" cut -f2 -d ' ')
	diff=$(datediff "$_since" "$utc")
	duration=$(showtime "$diff")
	nbsp='<i> </i>'
	notify-send -u critical -t 4000 "$nbsp$_task stopped ($duration)"
	echo "$_task $_since $utc" >> "$histfile"
	rm "$lockfile"
}

function starttask () {
	if [ -f "$lockfile" ]; then
		endtask
	fi

	nbsp='<i> </i>'
	notify-send "$nbsp$1 started"
	echo "$1 $utc" > "$lockfile"
}

# shellcheck disable=SC2059
function report () {
	_format='%-24s %-14s\n'
	printf "$_format" 'Task' 'Duration'
	printf "$_format" '------------------------' '--------------'

	minutc=0
	if [ "$#" -gt 0 ]; then
		minutc=$(date --date="$1" +%s)
	fi

	pymap=$(cat << END
from collections import Counter
import sys

minutc = int(sys.argv[1])
maxutc = 0xffffffffffff

report = Counter()
for line in sys.stdin:
	(task, begin, end) = line.split(' ', 2)
	if (int(begin) < minutc): continue

	duration = int(end) - int(begin)
	report[task] += duration

for task in report:
	print(task, report[task])
END
	)

	<"$histfile" python -c "$pymap" "$minutc" | while read -r line; do
		_task=$(echo "$line" | cut -f1 -d ' ')
		_seconds=$(echo "$line" | cut -f2 -d ' ')
		duration=$(showtime "$_seconds")
		printf "$_format" "$_task" "$duration"
	done
}

if [ "$1" == 'stop' ]; then
	if [ -f "$lockfile" ]; then
		endtask
	fi

	exit 0
fi

if [ "$1" == 'report' ]; then
	report "$2" "$3"
	exit 0
fi

last10="$(<"$histfile" tail -n10)"
tasks=$(find "$projdir" -mindepth 2 -printf '%P\n')
task=$(echo -e "$last10\\n$tasks" \
	| cut -f1 -d ' ' \
	| sort \
	| uniq --count \
	| sort -k1,1nr -k2,2 \
	| colrm 1 8 \
	| dmenu "$@")

if [ -z "$task" ]; then
	exit 0
fi

starttask "$task"
